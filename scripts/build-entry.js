let Components = require('../components.json')
let fs = require('fs')
let render = require('json-templater/string')
let uppercamelcase = require('uppercamelcase')
let path = require('path')
let endOfLine = require('os').EOL

const OUTPUT_PATH = path.join(__dirname, '../packages/index.js')

const IMPORT_TEMPLATE = `import {{name}} from '../{{package}}';`;
const INSTALL_COMPONENT_TEMPLATE = '  {{name}}'
const MAIN_TEMPLATE = `/* Automatically generated by './build/build-entry.js' */

{{include}}
import './theme/index.scss'
 // Global
import Global from "./global-methods/install";
const components = [
{{install}},
];

const install = function(Vue, opts = {}) {

  if (install.installed) return

  components.forEach((component) => Vue.component(component.name, component))

  Vue.prototype.$beautiful = {
 
    buttonSize: opts.buttonSize || 'mini',
    
  }
  Global.install(Vue, { ...opts });

};

/* istanbul ignore if */
if (typeof window !== 'undefined' && window.Vue) {
  install(window.Vue);
}

export default {
  version: '{{version}}',
  install,
{{list}}
};
`;

delete Components.font

let ComponentNames = Object.keys(Components)
 
 
console.log(ComponentNames);
 
let includeComponentTemplate = []
let installTemplate = []
let listTemplate = []

ComponentNames.forEach((name) => {
  let componentName = uppercamelcase(name)

  includeComponentTemplate.push(
    render(IMPORT_TEMPLATE, {
      name: componentName,
      package: Components[name],
    })
  );

  if (['Loading'].indexOf(componentName) === -1) {
    installTemplate.push(
      render(INSTALL_COMPONENT_TEMPLATE, {
        name: componentName,
        component: name,
      })
    )
  }

  if (componentName !== 'Loading') listTemplate.push(`  ${componentName}`)
})

let template = render(MAIN_TEMPLATE, {
  include: includeComponentTemplate.join(endOfLine),
  install: installTemplate.join(',' + endOfLine),
  version: process.env.VERSION || require('../package.json').version,
  list: listTemplate.join(',' + endOfLine),
})

fs.writeFileSync(OUTPUT_PATH, template)
console.log('[build entry] DONE:', OUTPUT_PATH)
