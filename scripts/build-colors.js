// 根据ColorPalette.md文件生成颜色变量 PRIMARY_BLUE 中信蓝 #2B4D99

const fs = require("fs");
const path = require("path");

const filePath = path.resolve(__dirname, "../ColorPalette.cvs");
const fileContent = fs.readFileSync(filePath, "utf-8");

let colorName = "";
let colorHex = "";
let colorDesc = "";
let colorArr = [];
const lines = fileContent.split("\n");
lines.forEach((line, index) => {
  const lineArr = line.split(" ");

  if (lineArr.length === 3) {
    if (index === 0) {
      colorName = lineArr[0].trim();
      colorHex = lineArr[1].trim();
      colorDesc = lineArr[2].trim();
    } else {
      colorArr.push({
        [colorName]: lineArr[0].trim(),
        [colorHex]: lineArr[1].trim(),
        [colorDesc]: lineArr[2].trim(),
      });
    }
  }
});

// generate color variables => $primary-blue: #2B4D99;
// 根据 colorArr 生成 scss 变量
let colorVar = "";
colorArr.forEach((item) => {
  const colorName = item.Name;
  const colorHex = item.Hex;
  // 描述
  const colorDesc = item.Description;

  colorVar += `$_${colorName}: ${colorHex}; //${colorDesc}\n`;
});
colorVar = `// Automatically generated by scripts/build-colors.js \n${colorVar}`;

// 生成文件
const colorVarPath = path.resolve(__dirname, "../packages/theme/_colors.scss");
fs.writeFileSync(colorVarPath, colorVar);
// 生成json文件 colorArr
const colorArrPath = path.resolve(__dirname, "../packages/theme/_colors.json");
fs.writeFileSync(colorArrPath, JSON.stringify({
    name: "colors",
    time: new Date().toLocaleString(),
    colorList: colorArr

}));

console.log(colorVar);
